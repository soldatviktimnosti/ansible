---
- name: Set global variables
  hosts: localhost
  connection: local
  vars:
    k3s_master_ip: "192.168.56.101"  # Жёстко прописываем IP мастера
    k3s_version: "v1.26.5+k3s1"      # Указываем конкретную версию
  
  tasks:
    - name: Set facts for all hosts
      set_fact:
        k3s_master_ip: "{{ k3s_master_ip }}"
      delegate_to: "{{ groups.all }}"
      delegate_facts: true

- name: Install common dependencies
  hosts: all
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install required packages
      apt:
        name: [curl, wget, git, net-tools]
        state: present

- name: Configure K3s master
  hosts: control-plane
  become: yes
  vars:
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"
  
  tasks:
    - name: Install K3s server with fixed IP
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} sh -s - \
          --write-kubeconfig-mode 644 \
          --disable traefik \
          --node-name k3s-master \
          --tls-san {{ k3s_master_ip }} \
          --bind-address {{ k3s_master_ip }} \
          --advertise-address {{ k3s_master_ip }}
      args:
        creates: "/usr/local/bin/k3s"
    
    - name: Verify K3s service
      command: systemctl is-active k3s
      register: k3s_status
      until: k3s_status.rc == 0
      retries: 10
      delay: 5

    - name: Copy kubeconfig
      become: yes
      shell: |
        mkdir -p /home/vagrant/.kube && \
        cp {{ kubeconfig_path }} /home/vagrant/.kube/config && \
        chown vagrant:vagrant /home/vagrant/.kube/config
      args:
        creates: "/home/vagrant/.kube/config"

- name: Verify K3s API
  hosts: control-plane
  tasks:
    - name: Wait for K3s API port
      wait_for:
        host: "{{ k3s_master_ip }}"
        port: 6443
        timeout: 180
    
    - name: Check API health
      uri:
        url: https://{{ k3s_master_ip }}:6443/healthz
        validate_certs: no
        return_content: yes
      register: api_check
      until: api_check.status == 200
      retries: 15
      delay: 10

- name: Configure workers
  hosts: workers
  become: yes
  tasks:
    - name: Get master node token
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      delegate_to: "{{ groups['control-plane'][0] }}"
    
    - name: Install K3s agent
      shell: |
        curl -sfL https://get.k3s.io | \
          K3S_URL=https://{{ k3s_master_ip }}:6443 \
          K3S_TOKEN={{ k3s_token.stdout }} \
          INSTALL_K3S_VERSION={{ k3s_version }} \
          sh -s - --node-name k3s-worker-{{ ansible_hostname }}
      args:
        creates: "/usr/local/bin/k3s"
    
    - name: Verify agent status
      command: systemctl is-active k3s-agent
      register: agent_status
      until: agent_status.rc == 0
      retries: 10
      delay: 5

- name: Verify cluster
  hosts: control-plane
  tasks:
    - name: Check nodes status
      command: kubectl get nodes
      register: nodes
      until: "'k3s-master' in nodes.stdout and 'k3s-worker' in nodes.stdout"
      retries: 10
      delay: 15

- name: Install ArgoCD on master
  hosts: control-plane
  become: yes
  tasks:
    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: "/usr/local/bin/helm"
    
    - name: Check if ArgoCD already installed
      shell: |
        helm status argocd -n argocd >/dev/null 2>&1 && echo "installed" || echo "not_installed"
      register: argocd_status
      environment:
        KUBECONFIG: "/home/vagrant/.kube/config"
      changed_when: false

    - name: Deploy ArgoCD
      shell: |
        helm repo add argo https://argoproj.github.io/argo-helm
        helm repo update
        helm upgrade --install argocd argo/argo-cd \
          --namespace argocd \
          --create-namespace \
          --set server.service.type=NodePort \
          --set server.service.nodePort=30007
      environment:
        KUBECONFIG: "/home/vagrant/.kube/config"
      when: argocd_status.stdout == "not_installed"
    
    - name: Get ArgoCD password
      shell: |
        kubectl -n argocd get secret argocd-initial-admin-secret \
          -o jsonpath="{.data.password}" | base64 -d || echo "PASSWORD_NOT_READY"
      register: argocd_password
      retries: 5
      delay: 10
      until: argocd_password.stdout != "PASSWORD_NOT_READY"
      changed_when: false

    - name: Show access info
      debug:
        msg: |
          ArgoCD доступен по адресу:
          http://{{ k3s_master_ip }}:30007
          Логин: admin
          Пароль: {{ argocd_password.stdout }}